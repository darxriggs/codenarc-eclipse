package org.codenarc.eclipse.preferencesimport static org.codenarc.eclipse.preferences.CodeNarcPreferenceConstants.*import org.codenarc.eclipse.Activatorimport org.eclipse.core.resources.ResourcesPluginimport org.eclipse.jface.preference.BooleanFieldEditorimport org.eclipse.jface.preference.FieldEditorPreferencePageimport org.eclipse.jface.preference.FileFieldEditorimport org.eclipse.swt.events.SelectionEventimport org.eclipse.swt.events.SelectionListenerimport org.eclipse.swt.widgets.Compositeimport org.eclipse.ui.IWorkbenchimport org.eclipse.ui.IWorkbenchPreferencePage/** * Eclipse preference page for CodeNarc plugin. * You can enable a custom configuration file to use with CodeNarc here. * It will save the properties in current preference store. * * @author <a href="mailto:csaba.sulyok@gmail.com">Csaba Sulyok</a> */
class CodeNarcPreferencePage extends FieldEditorPreferencePage implements IWorkbenchPreferencePage {    private BooleanFieldEditor useCustomConfigField
    private FileFieldEditor configFileField    private Composite parent
    CodeNarcPreferencePage() {
        super(1)    }    @Override
    void createFieldEditors() {        parent = getFieldEditorParent()        useCustomConfigField = new BooleanFieldEditor(P_USE_CUSTOM_CONFIG, USE_CUSTOM_CONFIG_LABEL, fieldEditorParent)        addField(useCustomConfigField)        configFileField = new FileFieldEditor(P_CONFIG_PATH, CONFIG_PATH_LABEL, parent)        configFileField.fileExtensions = [ '*.xml' ] as String[]        configFileField.filterPath = ResourcesPlugin.workspace.root.location.toFile()        configFileField.setEnabled(preferenceStore.getBoolean(P_USE_CUSTOM_CONFIG), parent)        addField(configFileField)        useCustomConfigField.getChangeControl(parent).addSelectionListener(new SelectionListener() {          void widgetDefaultSelected(SelectionEvent e) { widgetSelected(e) }          void widgetSelected(SelectionEvent e) {            configFileField.setEnabled(useCustomConfigField.booleanValue, parent)          }        })    }    @Override
    void init(final IWorkbench workbench) {
        preferenceStore = Activator.default.preferenceStore
        description = PREFERENCE_PAGE_DESCRIPTION    }}
